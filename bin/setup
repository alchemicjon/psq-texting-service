#!/usr/bin/env ruby
require 'fileutils'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Preparing database =="
  system! 'bin/rails db:reset'
  system! 'bin/rails db:migrate'

  puts "\n== Running deployment tasks"
  system! 'bin/rails after_party:run'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'

  puts "\n==Deleting existing .env file =="
  system! 'rm .env'

  puts "\n== Setting up environment variables =="
  print "\n Enter your development database password: "
  pw = gets
  system! "echo 'PSQL_PASSWORD: #{pw}' >> .env"
  print "\n Enter the public url used (in development, this is your ngrok forwarding address): "
  url = gets
  trimmed_url = url.delete_prefix 'https://'
  system! "echo 'PUBLIC_URL: #{trimmed_url}' >> .env"

  puts "\n == All set! =="
  puts "You should now be able to run the API. If your public url changes (i.e. you shut down ngrok when running locally) re-run this script to set the new url in .env."
  puts "\n Boot the API using:"
  puts "\n bin/rails server"
  puts "\n Try sending a message using curl!"
  curl = %{ curl -X POST -H "Content-Type: application/json" \\
    -d '{"number": "412 255 2626", "body": "hello world"}' \\
    localhost:3000/messages
  }
  puts "\n #{curl}"
end
